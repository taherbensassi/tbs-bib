security:
    encoders:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-provider
    enable_authenticator_manager: true
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    role_hierarchy:
        ROLE_SUPER_ADMIN: [ ROLE_ADMIN,ROLE_ALLOWED_TO_SWITCH, ROLE_USER ]
        ROLE_ADMIN: [ ROLE_ALLOWED_TO_SWITCH, ROLE_USER ]
        ROLE_USER: [ ROLE_USER ]
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            user_checker: App\Security\UserChecker
            entry_point: App\Security\AuthenticationEntryPoint
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                target: app_login
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 2592000
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/(%app_locales%)/admin, roles: ROLE_ADMIN }
        - { path: ^/(%app_locales%)/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/(%app_locales%)/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }

